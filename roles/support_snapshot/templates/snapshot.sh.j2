#!/bin/bash

# prune node
sudo service {{ network }}d stop
sleep 5
{{ user_dir }}/go/bin/cosmprund prune ~/{{ folder }}/data
sleep 5

# Make sure the service is running
sudo service {{ network }}d start
sleep 10


# Stop service
sudo service {{ network }}d stop

# Compress the folder
mkdir -p {{ snap_dir }}/{{ network }}

{% if wasm is defined and wasm == "outside" %}
tar --exclude=wasm/wasm/cache -cf - {{ user_dir }}/{{ folder }}/data {{ user_dir }}/{{ folder }}/wasm | lz4 - {{ snap_dir }}/{{ network }}/snapshot_latest.tar.lz4 -f
tar --exclude=wasm/wasm/cache -cf - {{ user_dir }}/{{ folder }}/wasm | lz4 - {{ snap_dir }}/{{ network }}/wasmonly.tar.lz4 -f

{% elif wasm is defined and wasm == "inside" %}
tar --exclude=data/wasm/cache -cf - {{ user_dir }}/{{ folder }}/data | lz4 - {{ snap_dir }}/{{ network }}/snapshot_latest.tar.lz4 -f
cd {{ user_dir }}/{{ folder }}/data
tar --exclude=wasm/cache -cf - wasm | lz4 - {{ snap_dir }}/{{ network }}/wasmonly.tar.lz4 -f

{% else %}
tar -cf - {{ user_dir }}/{{ folder }}/data | lz4 - {{ snap_dir }}/{{ network }}/snapshot_latest.tar.lz4 -f
{% endif %}

#Copy Genesis & addrbook
cp {{ user_dir }}/{{ folder }}/config/addrbook.json {{ snap_dir }}/{{ network }}/
cp {{ user_dir }}/{{ folder }}/config/genesis.json {{ snap_dir }}/{{ network }}/

# Restart the service
sudo service {{ network }}d start

sleep 10

#Log json
set -e
now_date() {
    echo -n $(TZ=":Europe/Moscow" date '+%Y-%m-%d_%H:%M:%S')
}
log_this() {
    YEL='\033[1;33m' # yellow
    NC='\033[0m'     # No Color
    local logging="$@"
    printf " $logging\n" | tee -a {{ snap_dir }}/{{ network }}/log.json
}


SIZE="$(du -sh {{ snap_dir }}/{{ network }}/snapshot_latest.tar.lz4 | awk '{print $1}')"
DOWNLOAD="https:\/\/ss.nodeist.net\/{{ network }}\/snapshot_latest.tar.lz4"
LAST_BLOCK_HEIGHT=$(curl -s http://localhost:{{ custom_port_prefix }}57/status | jq -r .result.sync_info.latest_block_height)
TIME=$(TZ=":Europe/Moscow" date '+%d-%m-%Y %H:%M')
NETWORK=$(curl -s http://localhost:{{ custom_port_prefix }}57/status | jq -r .result.node_info.network)
VERSION=$(curl -s http://localhost:{{ custom_port_prefix }}17/cosmos/base/tendermint/v1beta1/node_info | jq -r .application_version.version)
SDK_VERSION=$(curl -s http://localhost:{{ custom_port_prefix }}17/cosmos/base/tendermint/v1beta1/node_info | jq -r .application_version.cosmos_sdk_version)
log_this "[{"\"block"\":"\"${LAST_BLOCK_HEIGHT}"\", "\"time"\":"\"${TIME}"\","\"size"\":"\"${SIZE}"\","\"download"\":"\"${DOWNLOAD}"\","\"network"\":"\"${NETWORK}"\","\"version"\":"\"${VERSION}"\","\"sdk_version"\":"\"${SDK_VERSION}"\"}]"
