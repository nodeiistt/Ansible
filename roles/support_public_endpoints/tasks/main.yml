- name: import tasks for mainnet
  import_tasks: mainnet.yml
  when: type is defined and type == 'main'

- name: import tasks for testnet
  import_tasks: testnet.yml
  when: type is defined and type == 'test'

- name: install nginx package
  become: true
  apt:
    name: nginx
    state: present
    update_cache: yes

- name: Copy nginx main config file
  become: true
  template:
    src: 'nginx_conf.j2'
    dest: '/etc/nginx/nginx.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'

- name: Copy nginx config file for rpc
  become: true
  template:
    src: 'rpc_nginx_conf.j2'
    dest: '/etc/nginx/sites-enabled/rpc-{{network}}'
    owner: 'root'
    group: 'root'
    mode: '0644'
  when: type is defined and type == 'main'

- name: Copy nginx config file for api
  become: true
  template:
    src: 'api_nginx_conf.j2'
    dest: '/etc/nginx/sites-enabled/api-{{network}}'
    owner: 'root'
    group: 'root'
    mode: '0644'
  when: type is defined and type == 'main'

- name: Copy nginx config file for rpc
  become: true
  template:
    src: 'rpc_nginx_conf.j2'
    dest: '/etc/nginx/sites-enabled/rpc-testnet-{{network}}'
    owner: 'root'
    group: 'root'
    mode: '0644'
  when: type is defined and type == 'test'

- name: Copy nginx config file for api
  become: true
  template:
    src: 'api_nginx_conf.j2'
    dest: '/etc/nginx/sites-enabled/api-testnet-{{network}}'
    owner: 'root'
    group: 'root'
    mode: '0644'
  when: type is defined and type == 'test'


- name: restart nginx service
  become: true
  systemd:
    name: nginx
    state: restarted
    daemon_reload: yes
    enabled: yes
  changed_when: false

- name: open gPRC port
  become: true
  ufw:
    rule: allow
    port: '{{ custom_port_prefix }}90'
    proto: tcp

- name: Create rpc endpoint
  cloudflare_dns:
    zone: nodeist.net
    record: '{{ rpc }}'
    type: A
    value: '{{ ansible_host }}'
    api_token: '{{ cloudflare_api_key }}'
    proxied: true
  register: record

- name: Create api endpoint
  cloudflare_dns:
    zone: nodeist.net
    record: '{{ api }}'
    type: A
    value: '{{ ansible_host }}'
    api_token: '{{ cloudflare_api_key }}'
    proxied: true
  register: record

- name: Create grpc endpoint
  cloudflare_dns:
    zone: nodeist.net
    record: '{{ grpc }}'
    type: A
    value: '{{ ansible_host }}'
    api_token: '{{ cloudflare_api_key }}'
    proxied: false
  register: record
